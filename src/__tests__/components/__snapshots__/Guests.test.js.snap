// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Guests />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <textarea
          cols="30"
          id="namesText"
          name="names"
          placeholder="Guest name"
          rows="2"
          tabIndex="1"
        />,
        <textarea
          cols="30"
          id="datesText"
          name="dates"
          placeholder="Dates"
          rows="2"
          tabIndex="2"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "cols": "30",
          "id": "namesText",
          "name": "names",
          "onChange": undefined,
          "placeholder": "Guest name",
          "rows": "2",
          "tabIndex": "1",
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "textarea",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "cols": "30",
          "id": "datesText",
          "name": "dates",
          "onChange": undefined,
          "placeholder": "Dates",
          "rows": "2",
          "tabIndex": "2",
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": "textarea",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <textarea
            cols="30"
            id="namesText"
            name="names"
            placeholder="Guest name"
            rows="2"
            tabIndex="1"
          />,
          <textarea
            cols="30"
            id="datesText"
            name="dates"
            placeholder="Dates"
            rows="2"
            tabIndex="2"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "cols": "30",
            "id": "namesText",
            "name": "names",
            "onChange": undefined,
            "placeholder": "Guest name",
            "rows": "2",
            "tabIndex": "1",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "cols": "30",
            "id": "datesText",
            "name": "dates",
            "onChange": undefined,
            "placeholder": "Dates",
            "rows": "2",
            "tabIndex": "2",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
